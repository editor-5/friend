flex-start: 요소들을 컨테이너의 왼쪽으로 정렬합니다.
flex-end: 요소들을 컨테이너의 오른쪽으로 정렬합니다.
center: 요소들을 컨테이너의 가운데로 정렬합니다.
space-between: 요소들 사이에 동일한 간격을 둡니다.
space-around: 요소들 주위에 동일한 간격을 둡니다.

/* 1 */
#pond {
    display: flex;
    justfy-content:flex-end;
    }

이 코드는 CSS를 사용하여 id가 "pond"인 요소에 스타일을 적용하는 것입니다. "display: flex;"는 해당 요소를 플렉스 박스로 만들어 자식 요소를 배치하는 데
유연성을 제공합니다. "justify-content: flex-end;"는 플렉스 컨테이너 내에서 자식 요소를 플렉스 끝 부분으로 정렬합니다. 즉, 해당 요소 내의 내용물을 오른쪽
끝으로 정렬합니다.

/* 2 */
#pond {
  display: flex;
  justify-content:center
  }

이 코드는 CSS를 사용하여 id가 "pond"인 요소에 스타일을 적용하는 것입니다. "display: flex;"는 해당 요소를 플렉스 박스로 만들어 자식 요소를 배치하는 
데 유연성을 제공합니다. "justify-content: center;"는 플렉스 컨테이너 내에서 자식 요소를 중앙으로 정렬합니다. 즉, 해당 요소 내의 내용물을 가로 방향으로
중앙에 정렬합니다.

/* 3 */  
#pond {
  display: flex;
  justify-content: space-around;
  }

이 코드는 CSS를 사용하여 id가 "pond"인 요소에 스타일을 적용하는 것입니다. 각 속성의 의미는 다음과 같습니다:
- `display: flex;`: "pond" 요소를 플렉스 컨테이너로 설정하여 자식 요소들을 유연하게 배치할 수 있게 합니다.
- `justify-content: space-around;`: 플렉스 컨테이너 내의 자식 요소들이 균등하게 배치되도록 합니다. 각 자식 요소 사이의 간격은 동일하고, 첫 번째 
자식 요소와 마지막 자식 요소는 컨테이너의 양 끝과 같은 간격을 가집니다.
즉, `#pond` 요소 안에 있는 자식 요소들이 컨테이너의 가로 방향으로 균등한 간격을 가지며 배치됩니다. 각 자식 요소 사이와 컨테이너의 양 끝과의 간격이 동일하게 설정됩니다.

/* 4 */  
#pond {
    display: flex;
    justify-content: space-between;
    }  

이 코드는 CSS를 사용하여 id가 "pond"인 요소에 스타일을 적용하는 것입니다. 각 속성의 의미는 다음과 같습니다:
 display: flex;: "pond" 요소를 플렉스 컨테이너로 설정하여, 자식 요소들을 유연하게 배치할 수 있게 합니다.
 justify-content: space-between;: 플렉스 컨테이너 내의 자식 요소들이 컨테이너의 양 끝에 배치되도록 하고, 각 자식 요소 사이의 간격은 동일하게 만듭니다.
이를 통해 #pond 요소의 자식 요소들이 다음과 같이 배치됩니다:
첫 번째 자식 요소는 컨테이너의 왼쪽 끝에 위치합니다.
마지막 자식 요소는 컨테이너의 오른쪽 끝에 위치합니다.
나머지 자식 요소들은 각자 사이에 동일한 간격을 두고 배치됩니다.

/* 5 */  
#pond {
    display: flex;
    align-items: flex-end;
      }

/* 6 */        
#pond {
    display: flex;
    justify-content: center;
    align-items: center;
      }      

/* 7 */   
#pond {
    display: flex;
    justify-content: space-around;
    align-items: flex-end;
      }      

/* 8 */       
#pond {
    display: flex;
    flex-direction: row-reverse;
      }      

/* 9 */ 
#pond {
    display: flex;
    flex-direction: column;
      }

/* 10 */ 
#pond {
    display: flex;
    flex-direction: row-reverse;
    justify-content: flex-end;
      }

/* 11 */ 
#pond {
    display: flex;
    flex-direction: column;
    justify-content: flex-end;
      }  
      
/* 12 */       
#pond {
    display: flex;
    flex-direction: column-reverse;
    justify-content: space-between;
      }

/* 13 flex-direction, justify-content, 그리고 align-items를 사용하여 개구리들이 자기 색깔과 같은 수련잎 위로 
     이동할 수 있도록 도와주세요.*/ 
#pond {
    display: flex;
    flex-direction: row-reverse;
    align-items: flex-end;
    justify-content: center;
      }

/* 14 때때로 컨테이너의 row나 column의 순서를 역으로 바꾸는 것만으로는 충분하지 않습니다. 이러한 경우에는 order 속성을 
      각 요소에 적용할 수 있습니다. order의 기본 값은 0이며, 양수나 음수로 바꿀 수 있습니다. */ 
#pond {
    display: flex;
      }
      
.yellow {
    order: 1;
      }

/* 15 */ 
#pond {
    display: flex;
      }
      
.red {
    order: -1
      }

/* 16 */
#pond {
    display: flex;
    align-items: flex-start;
      }
      
.yellow {
    align-self: flex-end;
      }     
      
#pond {
    display: flex;
    align-items: flex-start;
      }
 
 /* 17 */     
.yellow {
    order: 1;
    align-self: flex-end;
      }      

 /* 18 */  
#pond {
    display: flex;
    flex-wrap: wrap;
      }

 /* 19 */  
#pond {
    display: flex;
    flex-direction: column;
    flex-wrap: wrap;
      }

 /* 20 */  
#pond {
    display: flex;
    flex-flow: column wrap;
      }


 /* 21 */  
#pond {
    display: flex;
    flex-wrap: wrap;
    align-content: flex-start;
      }

 /* 22 */ 
#pond {
    display: flex;
    flex-wrap: wrap;
    align-content: flex-end;
      }

 /* 23 */ 
#pond {
    display: flex;
    flex-wrap: wrap;
    flex-direction: column-reverse;
    align-content: center;
      }

 /* 24 */ 
#pond {
    display: flex;
    flex-flow: column-reverse wrap-reverse;
    justify-content: center;
    align-content: space-between;
      }